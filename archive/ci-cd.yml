# CI/CD Pipeline .github/workflows/ci-cd.yml
name: CI/CD Pipeline
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: circle_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          
      - name: Install Python dependencies
        working-directory: ./src
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/test.txt
          
      - name: Run backend tests
        working-directory: ./src
        env:
          DJANGO_SETTINGS_MODULE: teki.settings
          ALLOWED_HOSTS: 127.0.0.1,localhost
          SECRET_KEY: this-is-a-secret-key
          MEDIA_PATH: ~/repo/src/media/
          STATIC_PATH: ~/repo/src/static/
          DATABASE_NAME: circle_test
          DATABASE_USER: ubuntu
          DATABASE_PASSWORD: postgres
          DATABASE_HOST: localhost
        run: |
          pytest main/tests/ -v --junitxml=test-results/junit.xml

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test